---
- ansible.builtin.import_playbook: update-nodes.ansible.yaml
- hosts: all
  become: true
  vars_files:
  - env_variables
  vars:
    sysctl_settings:
      net.bridge.bridge-nf-call-ip6tables: 1
      net.bridge.bridge-nf-call-iptables: 1
      net.ipv4.ip_forward: 1
  tasks:
    # https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/
    - name: Ensure desired directory exist
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    - name: Add kubernetes repository
      block:
        - name: Get key
          ansible.builtin.get_url:
            url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
            dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        - name: Update list
          ansible.builtin.apt_repository:
            repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
            filename: kubernetes.list
            state: present
      when: ansible_distribution == 'Ubuntu'
    - name: Installing kubernetes required packages
      apt:
        pkg: "{{ packages }}"
        state: present
        update_cache: true
        cache_valid_time: 3600
    - name: Installing some additional packages for better system management
      apt:
        pkg:
          - vim
          - ufw
        state: present
        update_cache: true
        cache_valid_time: 3600
    - name: UFW - Allow SSH connections
      community.general.ufw:
        rule: allow
        name: OpenSSH
      become: true
    - name: UFW - Enable and deny by default
      community.general.ufw:
        state: enabled
        default: deny
      become: true
    - name: Starting and Enabling the required services
      service:
        name: "{{ item }}"
        state: started
        enabled: true
      with_items: "{{ services }}"
    - name: Allow Network Prots in UFW
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
      with_items: "{{ master_ports if ('masters' in group_names) else worker_ports }}"
    - name: Ensure br_netfilter is enabled.
      modprobe:
        name: br_netfilter
        state: present
    - name: Add the br_netfilter module to work across reboot
      ansible.builtin.blockinfile:
        path: /etc/modules-load.d/k8s.conf
        block: |
          br_netfilter

    # https://docs.ansible.com/ansible/latest/collections/ansible/posix/sysctl_module.html
    - name: Ensure that the iptables see the bridged traffic
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: true
        state: present
        reload: true
        sysctl_file: /etc/sysctl.d/k8s.conf
      with_dict: '{{ sysctl_settings }}'

    # If kubelet version is 1.22 or greater we must to change docker driver
    # https://sysnet4admin.gitbook.io/k8s/trouble-shooting/cluster-build/kubelet-is-not-properly-working-on-1.22-version
    #
    # TODO: Check kubelet version is 1.22 and docker cgroup driver is cgroupfs like docker system info | grep -i driver
    - name: Change docker cgroup driver
      ansible.builtin.blockinfile:
        path: /etc/docker/daemon.json
        block: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"]
          }
